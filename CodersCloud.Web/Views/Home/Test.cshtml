
@model CodersCloud.Web.Models.BuildRequestModel

@{
    ViewBag.Title = "Test";
}
<script src="~/Scripts/jquery.signalR-2.2.0.min.js"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="~/signalr/hubs"></script>

<script type="text/javascript">

    $(function () {
        $("#sourcecode").html("\
using System;\n\
using System.Linq;\n\
class Program {\n\
\tpublic static void Main(string[] args) {\n\
\t\tvar even = from i in Enumerable.Range(1,100)\n\
\t\t\twhere i % 2 == 0\n\
\t\t\tselect i;\n\
\t\tforeach(var n in even) Console.WriteLine(n);\n\
\t\tConsole.Read();\n\
\t}\n\
}");

        // Reference the auto-generated proxy for the hub.
        var buildClientsHub = $.connection.buildClientsHub;

        buildClientsHub.client.updateResult = function (url) {
            $("#result").html("<strong>Result: </strong><a href='" + url + "'>" + url + "</a>");
        };

        buildClientsHub.client.updateStatus = function (status) {
            $("#status").html(status);
        };

        $("#status-container").hide();
    });

    function allowTab() {
        if (event.keyCode === 9) {
            var v = this.value, s = this.selectionStart, e = this.selectionEnd;
            this.value = v.substring(0, s) + '\t' + v.substring(e);
            this.selectionStart = this.selectionEnd = s + 1; return false;
        }
    }

    function OnBegin() {
        $("#status-container").show();
        $("#status").html("Queued");
        $("#result").html("");

        $.connection.hub.stop();
        return true;
    }

    function onSuccess(result) {
        if (result && result.responseJSON && result.responseJSON.jobId) {
            $.connection.hub.qs = "jobId=" + result.responseJSON.jobId;
            $.connection.hub.start();
        }
    }
</script>

<h2>Test</h2>
@using (Ajax.BeginForm("Test", "Home",
                        new AjaxOptions
                        {
                            OnBegin = "OnBegin",
                            OnComplete = "onSuccess"
                        },
                        new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(model => model.Source, new { @class = "col-sm-2" })
        <div class="col-sm-10">
            @Html.TextAreaFor(model => model.Source, new
       {
           @class = "form-control col-sm-12",
           @id = "sourcecode",
           @rows = "20",
           @onkeydown = "allowTab"
       })
            @Html.ValidationMessageFor(model => model.Source)
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button type="submit" class="btn btn-primary pull-right">Compile</button>
        </div>
    </div>
}

<div id="status-container" class="row">
    <div class="col-sm-12">
        <strong>Status: </strong>
        <span id="status"></span>
    </div>
</div>

<div class="row">
    <div id="result" class="col-sm-12"></div>
</div>

<img src="/Content/logo.svg" style="position:absolute;width:10vw;left:90vw;margin-left:-5vw;top:90vh;margin-top:-5vh;z-index: -10;">
